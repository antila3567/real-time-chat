{"ast":null,"code":"var _jsxFileName = \"/Users/ivanlegenkyi/work/nest/chat/real-time-client-server-course/client/src/WebSock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef();\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  console.log(messages);\n\n  function connect() {\n    socket.current = new WebSocket('ws://localhost:5000');\n\n    socket.current.onopen = () => {\n      setConnected(true);\n      const message = {\n        event: 'connection',\n        username,\n        id: Date.now()\n      };\n      socket.current.send(JSON.stringify(message));\n    };\n\n    socket.current.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    };\n\n    socket.current.onclose = () => {\n      const message = {\n        event: 'disconnect',\n        username,\n        id: Date.now()\n      };\n      socket.current.send(JSON.stringify(message));\n      setConnected(false);\n    };\n\n    socket.current.onerror = () => {\n      setConnected(false);\n      console.log('Socket error');\n    };\n  }\n\n  const sendMessage = async () => {\n    const message = {\n      username,\n      message: value,\n      id: Date.now(),\n      event: 'message'\n    };\n    socket.current.send(JSON.stringify(message));\n    setValue('');\n  };\n\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"enter your name, please\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [mess.event === 'connection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection_message\",\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [mess.username, \": \", mess.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 35\n          }, this), mess.event === 'disconnect' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, mess.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"3cT4WsfcDEqSZabjdtTXiO9x12k=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"sources":["/Users/ivanlegenkyi/work/nest/chat/real-time-client-server-course/client/src/WebSock.jsx"],"names":["React","useEffect","useRef","useState","axios","WebSock","messages","setMessages","value","setValue","socket","connected","setConnected","username","setUsername","console","log","connect","current","WebSocket","onopen","message","event","id","Date","now","send","JSON","stringify","onmessage","parse","data","prev","onclose","onerror","sendMessage","e","target","map","mess"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport axios from \"axios\";\n\nconst WebSock = () => {\n    const [messages, setMessages] = useState([]);\n    const [value, setValue] = useState('');\n    const socket = useRef()\n    const [connected, setConnected] = useState(false);\n    const [username, setUsername] = useState('')\n    console.log(messages)\n\n\n    function connect() {\n        socket.current = new WebSocket('ws://localhost:5000')\n\n        socket.current.onopen = () => {\n            setConnected(true)\n            const message = {\n                event: 'connection',\n                username,\n                id: Date.now()\n            }\n            socket.current.send(JSON.stringify(message))\n        }\n        socket.current.onmessage = (event) => {\n            const message = JSON.parse(event.data)\n            setMessages(prev => [message, ...prev])\n        }\n        socket.current.onclose = () => {\n             const message = {\n                event: 'disconnect',\n                username,\n                id: Date.now()\n            }\n            socket.current.send(JSON.stringify(message))\n            setConnected(false)\n        }\n        socket.current.onerror = () => {\n            setConnected(false)\n            console.log('Socket error')\n        }\n    }\n\n\n    const sendMessage = async () => {\n        const message = {\n            username,\n            message: value,\n            id: Date.now(),\n            event: 'message'\n        }\n        socket.current.send(JSON.stringify(message));\n        setValue('')\n    }\n\n    if(!connected) {\n        return (\n            <div className=\"center\">\n                <div className=\"form\">\n                    <input \n                    value={username} \n                    onChange={e => setUsername(e.target.value)} \n                    type=\"text\" placeholder=\"enter your name, please\"/>\n                    <button onClick={connect}>connect</button>\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n    return (\n        <div className=\"center\">\n            <div>\n                <div className=\"form\">\n                    <input \n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    type=\"text\"/>\n                    <button onClick={sendMessage}>Отправить</button>\n                </div>\n                <div className=\"messages\">\n                    {messages.map(mess =>\n                        <div key={mess.id}>\n                            {mess.event === 'connection'\n                                ? <div className=\"connection_message\">\n                                    Пользователь {mess.username} подключился\n                                </div>\n                                : <div className=\"message\">\n                                    {mess.username}: {mess.message}\n                                </div>\n                            }\n                            {mess.event === 'disconnect' && \n                                <div className=\"message\">\n                                    Пользователь {mess.username} отключился\n                                </div>\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WebSock;\n"]},"metadata":{},"sourceType":"module"}