{"ast":null,"code":"var _jsxFileName = \"/Users/ivanlegenkyi/work/nest/chat/real-time-client-server-course/client/src/WebSock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef();\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n\n  function connect() {\n    socket.current = new WebSocket('ws://localhost:5000');\n\n    socket.current.onopen = () => {\n      setConnected(true);\n      console.log('user success connected');\n      const message = {\n        event: 'Connection',\n        username,\n        id: Date.now()\n      };\n    };\n\n    socket.current.onmessage = () => {};\n\n    socket.current.onclose = () => {\n      setConnected(false);\n    };\n\n    socket.current.onerror = () => {\n      setConnected(false);\n      console.log('Socket error');\n    };\n  }\n\n  const sendMessage = async () => {\n    const message = {\n      username,\n      message: value,\n      id: Date.now(),\n      event: 'message'\n    };\n    socket.current.send(JSON.stringify(message));\n    setValue('');\n  };\n\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"enter your name, please\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: mess.event === 'connection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection_message\",\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [mess.username, \". \", mess.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 35\n          }, this)\n        }, mess.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"3cT4WsfcDEqSZabjdtTXiO9x12k=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"sources":["/Users/ivanlegenkyi/work/nest/chat/real-time-client-server-course/client/src/WebSock.jsx"],"names":["React","useEffect","useRef","useState","axios","WebSock","messages","setMessages","value","setValue","socket","connected","setConnected","username","setUsername","connect","current","WebSocket","onopen","console","log","message","event","id","Date","now","onmessage","onclose","onerror","sendMessage","send","JSON","stringify","e","target","map","mess"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport axios from \"axios\";\n\nconst WebSock = () => {\n    const [messages, setMessages] = useState([]);\n    const [value, setValue] = useState('');\n    const socket = useRef()\n    const [connected, setConnected] = useState(false);\n    const [username, setUsername] = useState('')\n\n\n    function connect() {\n        socket.current = new WebSocket('ws://localhost:5000')\n\n        socket.current.onopen = () => {\n            setConnected(true)\n            console.log('user success connected')\n            const message = {\n                event: 'Connection',\n                username,\n                id: Date.now()\n            }\n        }\n        socket.current.onmessage = () => {\n\n        }\n        socket.current.onclose = () => {\n            setConnected(false)\n        }\n        socket.current.onerror = () => {\n            setConnected(false)\n            console.log('Socket error')\n        }\n    }\n\n\n    const sendMessage = async () => {\n        const message = {\n            username,\n            message: value,\n            id: Date.now(),\n            event: 'message'\n        }\n        socket.current.send(JSON.stringify(message));\n        setValue('')\n    }\n\n    if(!connected) {\n        return (\n            <div className=\"center\">\n                <div className=\"form\">\n                    <input \n                    value={username} \n                    onChange={e => setUsername(e.target.value)} \n                    type=\"text\" placeholder=\"enter your name, please\"/>\n                    <button onClick={connect}>connect</button>\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n    return (\n        <div className=\"center\">\n            <div>\n                <div className=\"form\">\n                    <input \n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    type=\"text\"/>\n                    <button onClick={sendMessage}>Отправить</button>\n                </div>\n                <div className=\"messages\">\n                    {messages.map(mess =>\n                        <div key={mess.id}>\n                            {mess.event === 'connection'\n                                ? <div className=\"connection_message\">\n                                    Пользователь {mess.username} подключился\n                                </div>\n                                : <div className=\"message\">\n                                    {mess.username}. {mess.message}\n                                </div>\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WebSock;\n"]},"metadata":{},"sourceType":"module"}